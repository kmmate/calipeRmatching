% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{cpp_cm_cm}
\alias{cpp_cm_cm}
\title{Caliper matching estimator for estimated propensity score cpp interface.}
\usage{
cpp_cm_cm(
  y,
  d,
  x,
  modeltype,
  theta,
  delta,
  estimate_variance,
  beta,
  alpha,
  kappa_a,
  kappa_gamma,
  kappa_gamma_derivative
)
}
\arguments{
\item{y}{`n`-long \code{numeric} \code{vector} of observations of the outcome variable.}

\item{d}{`n`-long \code{numeric} \code{vector} of observations of the treatment indicator
variable. Each entry can be either 0 for control or 1 for treatment status.}

\item{x}{`n`-by-`k` \code{numeric} \code{array} of `n` observations of the `k` covariates.}

\item{modeltype}{type of the propensity score model. Currently only "logit" or "probit" are supported.}

\item{theta}{estimated `k+1`-long coefficient vector of the propensity score model. It is assumed to be statistically independent of (`y`,`d,`x`).
The first entry corresponds to the intercept.}

\item{delta}{the caliper, a positive \code{numeric} variable. If zero is passed, then the default 
data-driven value is used (recommended). If a positive value is passed, that is used instead.}

\item{estimate_variance}{\code{logical} variable. If \code{TRUE}, the variances of the estimators are estimated.
If \code{FALSE}, no variance estimates are provided; this is useful to speed up execution.}

\item{beta}{a positive \code{numeric} variable, negative-exponent of bandwidth in nonparametric variance estimation. 
If zero  is passed, it is the default value (recommended), otherwise it is equal to the passed value.}

\item{alpha}{a positive \code{numeric} variable, negative-exponent of truncation sequence in nonparametric variance estimation. 
If zero  is passed, it is the default value (recommended), otherwise it is equal to the passed value.
Must be strictly smaller than `beta`.}

\item{kappa_a}{a positive \code{numeric} variable, scale of truncation sequence in nonparametric variance estimation. 
If zero  is passed, it is the default value, otherwise it is equal to the passed value.}

\item{kappa_gamma}{a positive \code{numeric} variable, scale of bandwidth sequence in nonparametric variance estimation. 
If zero is passed, it is the default value, otherwise it is equal to the passed value.}

\item{kappa_gamma_derivative}{scale parameter of bandwidth in nonparametric variance estimation estimating derivatives w.r.t. \eqn{\theta}, the propensity score parameter. 
If zero is passed, a default value is used.}
}
\value{
A \code{List}, results from caliper matching estimation with elements:
\itemize{
\item point_estimates: a \code{List} with elements \itemize{ 
     \item ate_hat: estimated ATE; \eqn{\hat{\tau}_{\pi}} in [KPV23].
     \item att_hat: estimated ATT; \eqn{\hat{\tau}_{t,\pi}} in [KPV23].
     \item var_hat_ate: estimated asymptotic variance of `ate_hat`; \eqn{ \hat{V}_{\tau} + \hat{V}_{\sigma,\pi} } in [KPV23].
     \item var_hat_att: estimated asymptotic variance of `att_hat`; \eqn{ \hat{V}_{\tau_{t}} + \hat{V}_{t,\sigma,\pi} } in [KPV23].
     \item var_hat_component_tau_ate: the estimate \eqn{ \hat{V}_{\tau} } in [KPV23].
     \item var_hat_component_tau_att: the estimate \eqn{ \hat{V}_{\tau_{t}} } in [KPV23].
     \item var_hat_component_sigmapi_ate: the estimate \eqn{ \hat{V}_{\sigma,\pi} } in [KPV23].
     \item var_hat_component_sigmapi_att: the estimate \eqn{ \hat{V}_{t,\sigma,\pi} } in [KPV23].
     \item var_hat_component_estpi_ate: estimated variance component deriving from the estimation of propensity score; the third term in Equation (14) in [KPV23].
     \item var_hat_component_estpi_att: estimated variance component deriving from the estimation of propensity score; the third term in Equation (15) in [KPV23].
}
\item delta: caliper that is actually used. If zero was passed, then it is equal to the default data-driven value. If a positive value was passed, then it is equal to that instead.
\item number_of_matches: `n`-long vector, the number of matches for each unit.
\item matched_pairs: a 2-by-(number of matched pairs) matrix. A column with value (i,j) indicates that units i and j are matched. Indices start from 1.
\item var_estimation_settings: a \code{List} with elements \itemize{
     \item estimate_variance: whether variance estimation is performed (`estimate_variance=TRUE`), or not (`estimate_variance=FALSE`).
     \item a_n: value of truncation sequence in nonparametric variance estimation. Equal to `kappa_a` * `n` ^ `alpha`.
     \item gamma_n:  value of bandwidth in nonparametric variance estimation. Equal to `kappa_gamma` * `n` ^ `beta`.
     \item beta: negative-exponent of bandwidth in nonparametric variance estimation that is actually used. If zero was passed, it is the default value, otherwise it is equal to the passed value.
     \item alpha: negative-exponent of truncation sequence in nonparametric variance estimation that is actually used. If zero was passed, it is the default value, otherwise it is equal to the passed value.
     \item kappa_gamma: scale of bandwidth sequence in nonparametric variance estimation that is actually used. If zero was passed, it is the default value, otherwise it is equal to the passed value.
     \item kappa_a: scale of truncation sequence in nonparametric variance estimation that is actually used. If zero was passed, it is the default value, otherwise it is equal to the passed value.
     \item kappa_gamma_derivative: negative-exponent of truncation sequence in nonparametric variance estimation that is actually used. If zero was passed, it is the default value, otherwise it is equal to the passed value.     
     \item propscore_min: the smallest propensity score value in `propscore`.
     \item propscore_max: the largest propensity score value in `propscore`.
     \item truncation_low: lower threshold for variance estimation = `propscore_min` + `a_n`.
     \item truncation_high: higher threshold for variance estimation = `propscore_max` - `a_n`.
     }
}
}
\description{
Only for internal use. Users should use `cm_cm_estimated_propscore()` that has the same functionality with error checking.
}
\section{Warning}{
 

It is advised to look at the variance components in the returned results. 
Undesirably, negative values may occur; this may indicate too strong truncation at the bounderies.
To resolve this, lower `kappa_a` to mitigate truncation. 
Alternatively, try adjusting `kappa_gamma` and/or `kappa_gamma_derivative`.
}

\references{
[KPV23] Kormos, V. d. Pas, V. d. Vaart (2023): Asymptotics of Caliper Matching Estimators for Average Treatment Effects, https://arxiv.org/abs/2304.08373
}
\seealso{
\link{cm_cm_known_propscore}
}
\author{
Mate Kormos
}
